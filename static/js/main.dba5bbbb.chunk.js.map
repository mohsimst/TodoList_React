{"version":3,"sources":["component/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","props","className","onClick","onSelect","id","text","App","useState","inputList","setInputList","Items","setItems","deleteItems","console","log","oldItems","filter","aryElem","index","type","placeholder","value","onChange","event","target","map","itemval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAceA,MAZf,SAAkBC,GAEd,OACC,mCACA,sBAAKC,UAAU,aAAf,UACA,mBAAGA,UAAU,cAAc,cAAY,OAAQC,QAAS,kBAAMF,EAAMG,SAASH,EAAMI,OACjF,+BAAKJ,EAAMK,KAAX,aCgDQC,MAnDf,WACE,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAaMC,EAAc,SAACR,GACnBS,QAAQC,IAAI,WACZH,GAAS,SAACI,GACR,OAAOA,EAASC,QAAO,SAACC,EAASC,GAC/B,OAAOA,IAAUd,SAKvB,OACE,mCACA,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACC,uBACA,4CACA,uBACA,uBAAOkB,KAAK,OAAOC,YAAY,cAAcC,MAAOb,EAAWc,SA3BlD,SAACC,GACjBd,EAAac,EAAMC,OAAOH,UA2BvB,wBAAQnB,QAxBO,WAClBS,GAAS,SAACI,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBP,OAEvBC,EAAa,KAoBV,iBACA,6BAEOC,EAAMe,KAAI,SAACC,EAASR,GACnB,OAAO,cAAC,EAAD,CAEEd,GAAIc,EACJb,KAAMqB,EACNvB,SAAUS,GAHLM,gBC9BdS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dba5bbbb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction TodoList(props) {\r\n    \r\n    return (\r\n     <>\r\n     <div className=\"todo_style\">\r\n     <i className=\"fa fa-times\" aria-hidden=\"true\"  onClick={() => props.onSelect(props.id) } />\r\n       <li>{props.text} </li>\r\n    </div>  \r\n     </>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react'\nimport { useState } from 'react';\nimport './App.css';\nimport TodoList from './component/TodoList';\n\nfunction App() {\n  const [inputList,setInputList] = useState(\"\");\n  const [Items, setItems] = useState([]);\n\n  const itemEvent = (event) => {\n    setInputList(event.target.value);\n  }\n\n  const listOfItems = () => {\n    setItems((oldItems) => {\n      return [...oldItems, inputList];\n    })\n    setInputList(\"\");\n  }\n \n  const deleteItems = (id) => {\n    console.log(\"deleted\");\n    setItems((oldItems)=> {\n      return oldItems.filter((aryElem, index)=> {\n        return index !== id;\n      })\n    })\n }\n \n  return (\n    <>\n    <div className=\"main_div\">\n      <div className=\"center_div\">\n       <br/>\n       <h1> ToDo List</h1>\n       <br/>\n       <input type=\"text\" placeholder=\"Add a Items\" value={inputList} onChange={itemEvent}/>\n       <button onClick={listOfItems}> + </button>\n       <ol>\n            {\n              Items.map((itemval, index)=> {\n               return <TodoList \n                        key={index} \n                        id={index} \n                        text={itemval}\n                        onSelect={deleteItems}\n                        />\n              })\n            }\n       </ol>\n      </div>\n    </div>\n      \n    </>\n  )\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}